1	# function	int ID ( int ID ......	shift	I0 I11	s11		
2	# function int	ID ( int ID , ......	shift	I0 I11 I8	s8		
3	# function type_specifier	ID ( int ID , ......	reduce(type_specifier->int ,['#'])	I0 I11 I17	r39	I17	
4	# function type_specifier ID	( int ID , int ......	shift	I0 I11 I17 I41	s41		
5	# function type_specifier ID (	int ID , int ID ......	shift	I0 I11 I17 I41 I79	s79		
6	...... function type_specifier ID ( int	ID , int ID ) ......	shift	I0 I11 I17 I41 I79 I8	s8		
7	...... function type_specifier ID ( type_specifier	ID , int ID ) ......	reduce(type_specifier->int ,['#'])	I0 I11 I17 I41 I79 I120	r39	I120	
8	...... type_specifier ID ( type_specifier ID	, int ID ) { ......	shift	I0 I11 I17 I41 I79 I120 I140	s140		
9	...... function type_specifier ID ( function_declaration	, int ID ) { ......	reduce(function_declaration->type_specifier ID ,['#'])	I0 I11 I17 I41 I79 I119	r47	I119	
10	...... type_specifier ID ( function_declaration ,	int ID ) { if ......	shift	I0 I11 I17 I41 I79 I119 I139	s139		
11	...... ID ( function_declaration , int	ID ) { if ( ......	shift	I0 I11 I17 I41 I79 I119 I139 I8	s8		
12	...... ID ( function_declaration , type_specifier	ID ) { if ( ......	reduce(type_specifier->int ,['#'])	I0 I11 I17 I41 I79 I119 I139 I120	r39	I120	
13	...... ( function_declaration , type_specifier ID	) { if ( ID ......	shift	I0 I11 I17 I41 I79 I119 I139 I120 I140	s140		
14	...... ID ( function_declaration , function_declaration	) { if ( ID ......	reduce(function_declaration->type_specifier ID ,['#'])	I0 I11 I17 I41 I79 I119 I139 I176	r47	I176	
15	...... ( function_declaration , function_declaration function_declaration_suffix	) { if ( ID ......	reduce(function_declaration_suffix->$ ,['#'])	I0 I11 I17 I41 I79 I119 I139 I176 I200	r49	I200	
16	...... type_specifier ID ( function_declaration function_declaration_suffix	) { if ( ID ......	reduce(function_declaration_suffix->, function_declaration function_declaration_suffix ,['#'])	I0 I11 I17 I41 I79 I119 I138	r48	I138	
17	...... function type_specifier ID ( function_declaration_list	) { if ( ID ......	reduce(function_declaration_list->function_declaration function_declaration_suffix ,['#'])	I0 I11 I17 I41 I79 I121	r50	I121	
18	...... type_specifier ID ( function_declaration_list )	{ if ( ID > ......	shift	I0 I11 I17 I41 I79 I121 I141	s141		
19	# function_definition	{ if ( ID > ......	reduce(function_definition->function type_specifier ID ( function_declaration_list ) ,['#'])	I0 I10	r52	I10	
20	# function_definition {	if ( ID > ID ......	shift	I0 I10 I16	s16		
21	# function_definition { if	( ID > ID ) ......	shift	I0 I10 I16 I38	s38		
22	# function_definition { if (	ID > ID ) return ......	shift	I0 I10 I16 I38 I69	s69		
23	...... function_definition { if ( ID	> ID ) return ID ......	shift	I0 I10 I16 I38 I69 I94	s94		
24	...... function_definition { if ( primary_expression	> ID ) return ID ......	reduce(primary_expression->ID ,['#'])	I0 I10 I16 I38 I69 I98	r4	I98	
25	...... { if ( primary_expression >	ID ) return ID ; ......	shift	I0 I10 I16 I38 I69 I98 I90	s90		
26	...... { if ( primary_expression operator	ID ) return ID ; ......	reduce(operator->> ,['#'])	I0 I10 I16 I38 I69 I98 I125	r13	I125	
27	...... if ( primary_expression operator ID	) return ID ; else ......	shift	I0 I10 I16 I38 I69 I98 I125 I94	s94		
28	...... if ( primary_expression operator primary_expression	) return ID ; else ......	reduce(primary_expression->ID ,['#'])	I0 I10 I16 I38 I69 I98 I125 I153	r4	I153	
29	...... ( primary_expression operator primary_expression arithmetic_expression	) return ID ; else ......	reduce(arithmetic_expression->$ ,['#'])	I0 I10 I16 I38 I69 I98 I125 I153 I185	r17	I185	
30	...... { if ( primary_expression arithmetic_expression	) return ID ; else ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I10 I16 I38 I69 I98 I126	r16	I126	
31	...... function_definition { if ( constant_expression	) return ID ; else ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I10 I16 I38 I69 I97	r18	I97	
32	...... function_definition { if ( expression	) return ID ; else ......	reduce(expression->constant_expression ,['#'])	I0 I10 I16 I38 I69 I111	r31	I111	
33	...... { if ( expression )	return ID ; else return ......	shift	I0 I10 I16 I38 I69 I111 I132	s132		
34	...... if ( expression ) return	ID ; else return ID ......	shift	I0 I10 I16 I38 I69 I111 I132 I171	s171		
35	...... ( expression ) return ID	; else return ID ; ......	shift	I0 I10 I16 I38 I69 I111 I132 I171 I72	s72		
36	...... ( expression ) return primary_expression	; else return ID ; ......	reduce(primary_expression->ID ,['#'])	I0 I10 I16 I38 I69 I111 I132 I171 I77	r4	I77	
37	...... expression ) return primary_expression arithmetic_expression	; else return ID ; ......	reduce(arithmetic_expression->$ ,['#'])	I0 I10 I16 I38 I69 I111 I132 I171 I77 I117	r17	I117	
38	...... ( expression ) return constant_expression	; else return ID ; ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I10 I16 I38 I69 I111 I132 I171 I76	r18	I76	
39	...... ( expression ) return expression	; else return ID ; ......	reduce(expression->constant_expression ,['#'])	I0 I10 I16 I38 I69 I111 I132 I171 I195	r31	I195	
40	...... expression ) return expression ;	else return ID ; } ......	shift	I0 I10 I16 I38 I69 I111 I132 I171 I195 I212	s212		
41	...... if ( expression ) jump_statement	else return ID ; } ......	reduce(jump_statement->return expression ; ,['#'])	I0 I10 I16 I38 I69 I111 I132 I160	r65	I160	
42	...... if ( expression ) statement	else return ID ; } ......	reduce(statement->jump_statement ,['#'])	I0 I10 I16 I38 I69 I111 I132 I159	r55	I159	
43	...... ( expression ) statement else	return ID ; } function ......	shift	I0 I10 I16 I38 I69 I111 I132 I159 I187	s187		
44	...... expression ) statement else return	ID ; } function int ......	shift	I0 I10 I16 I38 I69 I111 I132 I159 I187 I40	s40		
45	...... ) statement else return ID	; } function int ID ......	shift	I0 I10 I16 I38 I69 I111 I132 I159 I187 I40 I72	s72		
46	...... ) statement else return primary_expression	; } function int ID ......	reduce(primary_expression->ID ,['#'])	I0 I10 I16 I38 I69 I111 I132 I159 I187 I40 I77	r4	I77	
47	...... statement else return primary_expression arithmetic_expression	; } function int ID ......	reduce(arithmetic_expression->$ ,['#'])	I0 I10 I16 I38 I69 I111 I132 I159 I187 I40 I77 I117	r17	I117	
48	...... ) statement else return constant_expression	; } function int ID ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I10 I16 I38 I69 I111 I132 I159 I187 I40 I76	r18	I76	
49	...... ) statement else return expression	; } function int ID ......	reduce(expression->constant_expression ,['#'])	I0 I10 I16 I38 I69 I111 I132 I159 I187 I40 I74	r31	I74	
50	...... statement else return expression ;	} function int ID ( ......	shift	I0 I10 I16 I38 I69 I111 I132 I159 I187 I40 I74 I115	s115		
51	...... expression ) statement else jump_statement	} function int ID ( ......	reduce(jump_statement->return expression ; ,['#'])	I0 I10 I16 I38 I69 I111 I132 I159 I187 I26	r65	I26	
52	...... expression ) statement else statement	} function int ID ( ......	reduce(statement->jump_statement ,['#'])	I0 I10 I16 I38 I69 I111 I132 I159 I187 I207	r55	I207	
53	# function_definition { selection_statement	} function int ID ( ......	reduce(selection_statement->if ( expression ) statement else statement ,['#'])	I0 I10 I16 I30	r66	I30	
54	# function_definition { statement	} function int ID ( ......	reduce(statement->selection_statement ,['#'])	I0 I10 I16 I35	r56	I35	
55	# function_definition { statement statement_list	} function int ID ( ......	reduce(statement_list->$ ,['#'])	I0 I10 I16 I35 I67	r61	I67	
56	# function_definition { statement_list	} function int ID ( ......	reduce(statement_list->statement statement_list ,['#'])	I0 I10 I16 I23	r60	I23	
57	# function_definition { statement_list }	function int ID ( int ......	shift	I0 I10 I16 I23 I52	s52		
58	# function_definition compound_statement	function int ID ( int ......	reduce(compound_statement->{ statement_list } ,['#'])	I0 I10 I15	r69	I15	
59	# function_implement	function int ID ( int ......	reduce(function_implement->function_definition compound_statement ,['#'])	I0 I3	r53	I3	
60	# external_declaration	function int ID ( int ......	reduce(external_declaration->function_implement ,['#'])	I0 I2	r70	I2	
61	# external_declaration function	int ID ( int ID ......	shift	I0 I2 I11	s11		
62	# external_declaration function int	ID ( int ID , ......	shift	I0 I2 I11 I8	s8		
63	# external_declaration function type_specifier	ID ( int ID , ......	reduce(type_specifier->int ,['#'])	I0 I2 I11 I17	r39	I17	
64	# external_declaration function type_specifier ID	( int ID , int ......	shift	I0 I2 I11 I17 I41	s41		
65	...... external_declaration function type_specifier ID (	int ID , int ID ......	shift	I0 I2 I11 I17 I41 I79	s79		
66	...... function type_specifier ID ( int	ID , int ID ) ......	shift	I0 I2 I11 I17 I41 I79 I8	s8		
67	...... function type_specifier ID ( type_specifier	ID , int ID ) ......	reduce(type_specifier->int ,['#'])	I0 I2 I11 I17 I41 I79 I120	r39	I120	
68	...... type_specifier ID ( type_specifier ID	, int ID ) { ......	shift	I0 I2 I11 I17 I41 I79 I120 I140	s140		
69	...... function type_specifier ID ( function_declaration	, int ID ) { ......	reduce(function_declaration->type_specifier ID ,['#'])	I0 I2 I11 I17 I41 I79 I119	r47	I119	
70	...... type_specifier ID ( function_declaration ,	int ID ) { if ......	shift	I0 I2 I11 I17 I41 I79 I119 I139	s139		
71	...... ID ( function_declaration , int	ID ) { if ( ......	shift	I0 I2 I11 I17 I41 I79 I119 I139 I8	s8		
72	...... ID ( function_declaration , type_specifier	ID ) { if ( ......	reduce(type_specifier->int ,['#'])	I0 I2 I11 I17 I41 I79 I119 I139 I120	r39	I120	
73	...... ( function_declaration , type_specifier ID	) { if ( ID ......	shift	I0 I2 I11 I17 I41 I79 I119 I139 I120 I140	s140		
74	...... ID ( function_declaration , function_declaration	) { if ( ID ......	reduce(function_declaration->type_specifier ID ,['#'])	I0 I2 I11 I17 I41 I79 I119 I139 I176	r47	I176	
75	...... ( function_declaration , function_declaration function_declaration_suffix	) { if ( ID ......	reduce(function_declaration_suffix->$ ,['#'])	I0 I2 I11 I17 I41 I79 I119 I139 I176 I200	r49	I200	
76	...... type_specifier ID ( function_declaration function_declaration_suffix	) { if ( ID ......	reduce(function_declaration_suffix->, function_declaration function_declaration_suffix ,['#'])	I0 I2 I11 I17 I41 I79 I119 I138	r48	I138	
77	...... function type_specifier ID ( function_declaration_list	) { if ( ID ......	reduce(function_declaration_list->function_declaration function_declaration_suffix ,['#'])	I0 I2 I11 I17 I41 I79 I121	r50	I121	
78	...... type_specifier ID ( function_declaration_list )	{ if ( ID < ......	shift	I0 I2 I11 I17 I41 I79 I121 I141	s141		
79	# external_declaration function_definition	{ if ( ID < ......	reduce(function_definition->function type_specifier ID ( function_declaration_list ) ,['#'])	I0 I2 I10	r52	I10	
80	# external_declaration function_definition {	if ( ID < ID ......	shift	I0 I2 I10 I16	s16		
81	# external_declaration function_definition { if	( ID < ID ) ......	shift	I0 I2 I10 I16 I38	s38		
82	...... external_declaration function_definition { if (	ID < ID ) return ......	shift	I0 I2 I10 I16 I38 I69	s69		
83	...... function_definition { if ( ID	< ID ) return ID ......	shift	I0 I2 I10 I16 I38 I69 I94	s94		
84	...... function_definition { if ( primary_expression	< ID ) return ID ......	reduce(primary_expression->ID ,['#'])	I0 I2 I10 I16 I38 I69 I98	r4	I98	
85	...... { if ( primary_expression <	ID ) return ID ; ......	shift	I0 I2 I10 I16 I38 I69 I98 I88	s88		
86	...... { if ( primary_expression operator	ID ) return ID ; ......	reduce(operator->< ,['#'])	I0 I2 I10 I16 I38 I69 I98 I125	r12	I125	
87	...... if ( primary_expression operator ID	) return ID ; else ......	shift	I0 I2 I10 I16 I38 I69 I98 I125 I94	s94		
88	...... if ( primary_expression operator primary_expression	) return ID ; else ......	reduce(primary_expression->ID ,['#'])	I0 I2 I10 I16 I38 I69 I98 I125 I153	r4	I153	
89	...... ( primary_expression operator primary_expression arithmetic_expression	) return ID ; else ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I10 I16 I38 I69 I98 I125 I153 I185	r17	I185	
90	...... { if ( primary_expression arithmetic_expression	) return ID ; else ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I10 I16 I38 I69 I98 I126	r16	I126	
91	...... function_definition { if ( constant_expression	) return ID ; else ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I10 I16 I38 I69 I97	r18	I97	
92	...... function_definition { if ( expression	) return ID ; else ......	reduce(expression->constant_expression ,['#'])	I0 I2 I10 I16 I38 I69 I111	r31	I111	
93	...... { if ( expression )	return ID ; else return ......	shift	I0 I2 I10 I16 I38 I69 I111 I132	s132		
94	...... if ( expression ) return	ID ; else return ID ......	shift	I0 I2 I10 I16 I38 I69 I111 I132 I171	s171		
95	...... ( expression ) return ID	; else return ID ; ......	shift	I0 I2 I10 I16 I38 I69 I111 I132 I171 I72	s72		
96	...... ( expression ) return primary_expression	; else return ID ; ......	reduce(primary_expression->ID ,['#'])	I0 I2 I10 I16 I38 I69 I111 I132 I171 I77	r4	I77	
97	...... expression ) return primary_expression arithmetic_expression	; else return ID ; ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I10 I16 I38 I69 I111 I132 I171 I77 I117	r17	I117	
98	...... ( expression ) return constant_expression	; else return ID ; ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I10 I16 I38 I69 I111 I132 I171 I76	r18	I76	
99	...... ( expression ) return expression	; else return ID ; ......	reduce(expression->constant_expression ,['#'])	I0 I2 I10 I16 I38 I69 I111 I132 I171 I195	r31	I195	
100	...... expression ) return expression ;	else return ID ; } ......	shift	I0 I2 I10 I16 I38 I69 I111 I132 I171 I195 I212	s212		
101	...... if ( expression ) jump_statement	else return ID ; } ......	reduce(jump_statement->return expression ; ,['#'])	I0 I2 I10 I16 I38 I69 I111 I132 I160	r65	I160	
102	...... if ( expression ) statement	else return ID ; } ......	reduce(statement->jump_statement ,['#'])	I0 I2 I10 I16 I38 I69 I111 I132 I159	r55	I159	
103	...... ( expression ) statement else	return ID ; } function ......	shift	I0 I2 I10 I16 I38 I69 I111 I132 I159 I187	s187		
104	...... expression ) statement else return	ID ; } function int ......	shift	I0 I2 I10 I16 I38 I69 I111 I132 I159 I187 I40	s40		
105	...... ) statement else return ID	; } function int ID ......	shift	I0 I2 I10 I16 I38 I69 I111 I132 I159 I187 I40 I72	s72		
106	...... ) statement else return primary_expression	; } function int ID ......	reduce(primary_expression->ID ,['#'])	I0 I2 I10 I16 I38 I69 I111 I132 I159 I187 I40 I77	r4	I77	
107	...... statement else return primary_expression arithmetic_expression	; } function int ID ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I10 I16 I38 I69 I111 I132 I159 I187 I40 I77 I117	r17	I117	
108	...... ) statement else return constant_expression	; } function int ID ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I10 I16 I38 I69 I111 I132 I159 I187 I40 I76	r18	I76	
109	...... ) statement else return expression	; } function int ID ......	reduce(expression->constant_expression ,['#'])	I0 I2 I10 I16 I38 I69 I111 I132 I159 I187 I40 I74	r31	I74	
110	...... statement else return expression ;	} function int ID ( ......	shift	I0 I2 I10 I16 I38 I69 I111 I132 I159 I187 I40 I74 I115	s115		
111	...... expression ) statement else jump_statement	} function int ID ( ......	reduce(jump_statement->return expression ; ,['#'])	I0 I2 I10 I16 I38 I69 I111 I132 I159 I187 I26	r65	I26	
112	...... expression ) statement else statement	} function int ID ( ......	reduce(statement->jump_statement ,['#'])	I0 I2 I10 I16 I38 I69 I111 I132 I159 I187 I207	r55	I207	
113	# external_declaration function_definition { selection_statement	} function int ID ( ......	reduce(selection_statement->if ( expression ) statement else statement ,['#'])	I0 I2 I10 I16 I30	r66	I30	
114	# external_declaration function_definition { statement	} function int ID ( ......	reduce(statement->selection_statement ,['#'])	I0 I2 I10 I16 I35	r56	I35	
115	...... external_declaration function_definition { statement statement_list	} function int ID ( ......	reduce(statement_list->$ ,['#'])	I0 I2 I10 I16 I35 I67	r61	I67	
116	# external_declaration function_definition { statement_list	} function int ID ( ......	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I10 I16 I23	r60	I23	
117	...... external_declaration function_definition { statement_list }	function int ID ( int ......	shift	I0 I2 I10 I16 I23 I52	s52		
118	# external_declaration function_definition compound_statement	function int ID ( int ......	reduce(compound_statement->{ statement_list } ,['#'])	I0 I2 I10 I15	r69	I15	
119	# external_declaration function_implement	function int ID ( int ......	reduce(function_implement->function_definition compound_statement ,['#'])	I0 I2 I3	r53	I3	
120	# external_declaration external_declaration	function int ID ( int ......	reduce(external_declaration->function_implement ,['#'])	I0 I2 I2	r70	I2	
121	# external_declaration external_declaration function	int ID ( int ID ......	shift	I0 I2 I2 I11	s11		
122	# external_declaration external_declaration function int	ID ( int ID ) ......	shift	I0 I2 I2 I11 I8	s8		
123	# external_declaration external_declaration function type_specifier	ID ( int ID ) ......	reduce(type_specifier->int ,['#'])	I0 I2 I2 I11 I17	r39	I17	
124	...... external_declaration external_declaration function type_specifier ID	( int ID ) { ......	shift	I0 I2 I2 I11 I17 I41	s41		
125	...... external_declaration function type_specifier ID (	int ID ) { if ......	shift	I0 I2 I2 I11 I17 I41 I79	s79		
126	...... function type_specifier ID ( int	ID ) { if ( ......	shift	I0 I2 I2 I11 I17 I41 I79 I8	s8		
127	...... function type_specifier ID ( type_specifier	ID ) { if ( ......	reduce(type_specifier->int ,['#'])	I0 I2 I2 I11 I17 I41 I79 I120	r39	I120	
128	...... type_specifier ID ( type_specifier ID	) { if ( ID ......	shift	I0 I2 I2 I11 I17 I41 I79 I120 I140	s140		
129	...... function type_specifier ID ( function_declaration	) { if ( ID ......	reduce(function_declaration->type_specifier ID ,['#'])	I0 I2 I2 I11 I17 I41 I79 I119	r47	I119	
130	...... type_specifier ID ( function_declaration function_declaration_suffix	) { if ( ID ......	reduce(function_declaration_suffix->$ ,['#'])	I0 I2 I2 I11 I17 I41 I79 I119 I138	r49	I138	
131	...... function type_specifier ID ( function_declaration_list	) { if ( ID ......	reduce(function_declaration_list->function_declaration function_declaration_suffix ,['#'])	I0 I2 I2 I11 I17 I41 I79 I121	r50	I121	
132	...... type_specifier ID ( function_declaration_list )	{ if ( ID < ......	shift	I0 I2 I2 I11 I17 I41 I79 I121 I141	s141		
133	# external_declaration external_declaration function_definition	{ if ( ID < ......	reduce(function_definition->function type_specifier ID ( function_declaration_list ) ,['#'])	I0 I2 I2 I10	r52	I10	
134	# external_declaration external_declaration function_definition {	if ( ID < number ......	shift	I0 I2 I2 I10 I16	s16		
135	...... external_declaration external_declaration function_definition { if	( ID < number ) ......	shift	I0 I2 I2 I10 I16 I38	s38		
136	...... external_declaration function_definition { if (	ID < number ) return ......	shift	I0 I2 I2 I10 I16 I38 I69	s69		
137	...... function_definition { if ( ID	< number ) return number ......	shift	I0 I2 I2 I10 I16 I38 I69 I94	s94		
138	...... function_definition { if ( primary_expression	< number ) return number ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I10 I16 I38 I69 I98	r4	I98	
139	...... { if ( primary_expression <	number ) return number ; ......	shift	I0 I2 I2 I10 I16 I38 I69 I98 I88	s88		
140	...... { if ( primary_expression operator	number ) return number ; ......	reduce(operator->< ,['#'])	I0 I2 I2 I10 I16 I38 I69 I98 I125	r12	I125	
141	...... if ( primary_expression operator number	) return number ; else ......	shift	I0 I2 I2 I10 I16 I38 I69 I98 I125 I96	s96		
142	...... if ( primary_expression operator primary_expression	) return number ; else ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I10 I16 I38 I69 I98 I125 I153	r5	I153	
143	...... ( primary_expression operator primary_expression arithmetic_expression	) return number ; else ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I10 I16 I38 I69 I98 I125 I153 I185	r17	I185	
144	...... { if ( primary_expression arithmetic_expression	) return number ; else ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I10 I16 I38 I69 I98 I126	r16	I126	
145	...... function_definition { if ( constant_expression	) return number ; else ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I10 I16 I38 I69 I97	r18	I97	
146	...... function_definition { if ( expression	) return number ; else ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111	r31	I111	
147	...... { if ( expression )	return number ; else { ......	shift	I0 I2 I2 I10 I16 I38 I69 I111 I132	s132		
148	...... if ( expression ) return	number ; else { int ......	shift	I0 I2 I2 I10 I16 I38 I69 I111 I132 I171	s171		
149	...... ( expression ) return number	; else { int ID ......	shift	I0 I2 I2 I10 I16 I38 I69 I111 I132 I171 I75	s75		
150	...... ( expression ) return primary_expression	; else { int ID ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I171 I77	r5	I77	
151	...... expression ) return primary_expression arithmetic_expression	; else { int ID ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I171 I77 I117	r17	I117	
152	...... ( expression ) return constant_expression	; else { int ID ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I171 I76	r18	I76	
153	...... ( expression ) return expression	; else { int ID ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I171 I195	r31	I195	
154	...... expression ) return expression ;	else { int ID = ......	shift	I0 I2 I2 I10 I16 I38 I69 I111 I132 I171 I195 I212	s212		
155	...... if ( expression ) jump_statement	else { int ID = ......	reduce(jump_statement->return expression ; ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I160	r65	I160	
156	...... if ( expression ) statement	else { int ID = ......	reduce(statement->jump_statement ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159	r55	I159	
157	...... ( expression ) statement else	{ int ID = function ......	shift	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187	s187		
158	...... expression ) statement else {	int ID = function ID ......	shift	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32	s32		
159	...... ) statement else { int	ID = function ID ( ......	shift	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I8	s8		
160	...... ) statement else { type_specifier	ID = function ID ( ......	reduce(type_specifier->int ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I37	r39	I37	
161	...... statement else { type_specifier ID	= function ID ( ID ......	shift	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I37 I14	s14		
162	...... else { type_specifier ID =	function ID ( ID - ......	shift	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I37 I14 I20	s20		
163	...... { type_specifier ID = function	ID ( ID - number ......	shift	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I37 I14 I20 I44	s44		
164	...... type_specifier ID = function ID	( ID - number ) ......	shift	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I37 I14 I20 I44 I81	s81		
165	...... ID = function ID (	ID - number ) ; ......	shift	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I37 I14 I20 I44 I81 I122	s122		
166	...... = function ID ( ID	- number ) ; int ......	shift	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I37 I14 I20 I44 I81 I122 I143	s143		
167	...... = function ID ( primary_expression	- number ) ; int ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I37 I14 I20 I44 I81 I122 I149	r4	I149	
168	...... function ID ( primary_expression -	number ) ; int ID ......	shift	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I37 I14 I20 I44 I81 I122 I149 I92	s92		
169	...... function ID ( primary_expression operator	number ) ; int ID ......	reduce(operator->- ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I37 I14 I20 I44 I81 I122 I149 I181	r8	I181	
170	...... ID ( primary_expression operator number	) ; int ID = ......	shift	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I37 I14 I20 I44 I81 I122 I149 I181 I147	s147		
171	...... ID ( primary_expression operator primary_expression	) ; int ID = ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I37 I14 I20 I44 I81 I122 I149 I181 I203	r5	I203	
172	...... ( primary_expression operator primary_expression arithmetic_expression	) ; int ID = ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I37 I14 I20 I44 I81 I122 I149 I181 I203 I217	r17	I217	
173	...... function ID ( primary_expression arithmetic_expression	) ; int ID = ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I37 I14 I20 I44 I81 I122 I149 I182	r16	I182	
174	...... = function ID ( constant_expression	) ; int ID = ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I37 I14 I20 I44 I81 I122 I148	r18	I148	
175	...... = function ID ( expression	) ; int ID = ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I37 I14 I20 I44 I81 I122 I146	r31	I146	
176	...... function ID ( expression expression_profix	) ; int ID = ......	reduce(expression_profix->$ ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I37 I14 I20 I44 I81 I122 I146 I180	r34	I180	
177	...... = function ID ( expression_list	) ; int ID = ......	reduce(expression_list->expression expression_profix ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I37 I14 I20 I44 I81 I122 I144	r35	I144	
178	...... function ID ( expression_list )	; int ID = ID ......	shift	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I37 I14 I20 I44 I81 I122 I144 I178	s178		
179	...... { type_specifier ID = function_expression	; int ID = ID ......	reduce(function_expression->function ID ( expression_list ) ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I37 I14 I20 I47	r30	I47	
180	...... { type_specifier ID = expression	; int ID = ID ......	reduce(expression->function_expression ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I37 I14 I20 I45	r32	I45	
181	...... else { type_specifier ID declaration_assign	; int ID = ID ......	reduce(declaration_assign->= expression ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I37 I14 I21	r41	I21	
182	...... statement else { type_specifier declaration_init	; int ID = ID ......	reduce(declaration_init->ID declaration_assign ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I37 I68	r43	I68	
183	...... else { type_specifier declaration_init declaration_init_list	; int ID = ID ......	reduce(declaration_init_list->$ ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I37 I68 I110	r45	I110	
184	...... { type_specifier declaration_init declaration_init_list ;	int ID = ID * ......	shift	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I37 I68 I110 I131	s131		
185	...... ) statement else { declaration	int ID = ID * ......	reduce(declaration->type_specifier declaration_init declaration_init_list ; ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I24	r46	I24	
186	...... ) statement else { statement	int ID = ID * ......	reduce(statement->declaration ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35	r59	I35	
187	...... statement else { statement int	ID = ID * ID ......	shift	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I8	s8		
188	...... statement else { statement type_specifier	ID = ID * ID ......	reduce(type_specifier->int ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I37	r39	I37	
189	...... else { statement type_specifier ID	= ID * ID ; ......	shift	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I37 I14	s14		
190	...... { statement type_specifier ID =	ID * ID ; return ......	shift	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I37 I14 I20	s20		
191	...... statement type_specifier ID = ID	* ID ; return ID ......	shift	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I37 I14 I20 I46	s46		
192	...... statement type_specifier ID = primary_expression	* ID ; return ID ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I37 I14 I20 I50	r4	I50	
193	...... type_specifier ID = primary_expression *	ID ; return ID ; ......	shift	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I37 I14 I20 I50 I84	s84		
194	...... type_specifier ID = primary_expression operator	ID ; return ID ; ......	reduce(operator->* ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I37 I14 I20 I50 I85	r9	I85	
195	...... ID = primary_expression operator ID	; return ID ; } ......	shift	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I37 I14 I20 I50 I85 I46	s46		
196	...... ID = primary_expression operator primary_expression	; return ID ; } ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I37 I14 I20 I50 I85 I123	r4	I123	
197	...... = primary_expression operator primary_expression arithmetic_expression	; return ID ; } ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I37 I14 I20 I50 I85 I123 I151	r17	I151	
198	...... type_specifier ID = primary_expression arithmetic_expression	; return ID ; } ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I37 I14 I20 I50 I87	r16	I87	
199	...... statement type_specifier ID = constant_expression	; return ID ; } ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I37 I14 I20 I49	r18	I49	
200	...... statement type_specifier ID = expression	; return ID ; } ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I37 I14 I20 I45	r31	I45	
201	...... { statement type_specifier ID declaration_assign	; return ID ; } ......	reduce(declaration_assign->= expression ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I37 I14 I21	r41	I21	
202	...... else { statement type_specifier declaration_init	; return ID ; } ......	reduce(declaration_init->ID declaration_assign ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I37 I68	r43	I68	
203	...... { statement type_specifier declaration_init declaration_init_list	; return ID ; } ......	reduce(declaration_init_list->$ ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I37 I68 I110	r45	I110	
204	...... statement type_specifier declaration_init declaration_init_list ;	return ID ; } } ......	shift	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I37 I68 I110 I131	s131		
205	...... statement else { statement declaration	return ID ; } } ......	reduce(declaration->type_specifier declaration_init declaration_init_list ; ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I24	r46	I24	
206	...... statement else { statement statement	return ID ; } } ......	reduce(statement->declaration ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I35	r59	I35	
207	...... else { statement statement return	ID ; } } function ......	shift	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I35 I40	s40		
208	...... { statement statement return ID	; } } function int ......	shift	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I35 I40 I72	s72		
209	...... { statement statement return primary_expression	; } } function int ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I35 I40 I77	r4	I77	
210	...... statement statement return primary_expression arithmetic_expression	; } } function int ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I35 I40 I77 I117	r17	I117	
211	...... { statement statement return constant_expression	; } } function int ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I35 I40 I76	r18	I76	
212	...... { statement statement return expression	; } } function int ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I35 I40 I74	r31	I74	
213	...... statement statement return expression ;	} } function int ID ......	shift	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I35 I40 I74 I115	s115		
214	...... else { statement statement jump_statement	} } function int ID ......	reduce(jump_statement->return expression ; ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I35 I26	r65	I26	
215	...... else { statement statement statement	} } function int ID ......	reduce(statement->jump_statement ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I35 I35	r55	I35	
216	...... { statement statement statement statement_list	} } function int ID ......	reduce(statement_list->$ ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I35 I35 I67	r61	I67	
217	...... else { statement statement statement_list	} } function int ID ......	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I35 I67	r60	I67	
218	...... statement else { statement statement_list	} } function int ID ......	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I35 I67	r60	I67	
219	...... ) statement else { statement_list	} } function int ID ......	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I63	r60	I63	
220	...... statement else { statement_list }	} function int ID ( ......	shift	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I32 I63 I108	s108		
221	...... expression ) statement else compound_statement	} function int ID ( ......	reduce(compound_statement->{ statement_list } ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I36	r69	I36	
222	...... expression ) statement else statement	} function int ID ( ......	reduce(statement->compound_statement ,['#'])	I0 I2 I2 I10 I16 I38 I69 I111 I132 I159 I187 I207	r58	I207	
223	...... external_declaration external_declaration function_definition { selection_statement	} function int ID ( ......	reduce(selection_statement->if ( expression ) statement else statement ,['#'])	I0 I2 I2 I10 I16 I30	r66	I30	
224	...... external_declaration external_declaration function_definition { statement	} function int ID ( ......	reduce(statement->selection_statement ,['#'])	I0 I2 I2 I10 I16 I35	r56	I35	
225	...... external_declaration function_definition { statement statement_list	} function int ID ( ......	reduce(statement_list->$ ,['#'])	I0 I2 I2 I10 I16 I35 I67	r61	I67	
226	...... external_declaration external_declaration function_definition { statement_list	} function int ID ( ......	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I10 I16 I23	r60	I23	
227	...... external_declaration function_definition { statement_list }	function int ID ( ) ......	shift	I0 I2 I2 I10 I16 I23 I52	s52		
228	# external_declaration external_declaration function_definition compound_statement	function int ID ( ) ......	reduce(compound_statement->{ statement_list } ,['#'])	I0 I2 I2 I10 I15	r69	I15	
229	# external_declaration external_declaration function_implement	function int ID ( ) ......	reduce(function_implement->function_definition compound_statement ,['#'])	I0 I2 I2 I3	r53	I3	
230	# external_declaration external_declaration external_declaration	function int ID ( ) ......	reduce(external_declaration->function_implement ,['#'])	I0 I2 I2 I2	r70	I2	
231	# external_declaration external_declaration external_declaration function	int ID ( ) { ......	shift	I0 I2 I2 I2 I11	s11		
232	...... external_declaration external_declaration external_declaration function int	ID ( ) { int ......	shift	I0 I2 I2 I2 I11 I8	s8		
233	...... external_declaration external_declaration external_declaration function type_specifier	ID ( ) { int ......	reduce(type_specifier->int ,['#'])	I0 I2 I2 I2 I11 I17	r39	I17	
234	...... external_declaration external_declaration function type_specifier ID	( ) { int ID ......	shift	I0 I2 I2 I2 I11 I17 I41	s41		
235	...... external_declaration function type_specifier ID (	) { int ID , ......	shift	I0 I2 I2 I2 I11 I17 I41 I79	s79		
236	...... function type_specifier ID ( function_declaration_list	) { int ID , ......	reduce(function_declaration_list->$ ,['#'])	I0 I2 I2 I2 I11 I17 I41 I79 I121	r51	I121	
237	...... type_specifier ID ( function_declaration_list )	{ int ID , ID ......	shift	I0 I2 I2 I2 I11 I17 I41 I79 I121 I141	s141		
238	# external_declaration external_declaration external_declaration function_definition	{ int ID , ID ......	reduce(function_definition->function type_specifier ID ( function_declaration_list ) ,['#'])	I0 I2 I2 I2 I10	r52	I10	
239	...... external_declaration external_declaration external_declaration function_definition {	int ID , ID ; ......	shift	I0 I2 I2 I2 I10 I16	s16		
240	...... external_declaration external_declaration function_definition { int	ID , ID ; ID ......	shift	I0 I2 I2 I2 I10 I16 I8	s8		
241	...... external_declaration external_declaration function_definition { type_specifier	ID , ID ; ID ......	reduce(type_specifier->int ,['#'])	I0 I2 I2 I2 I10 I16 I37	r39	I37	
242	...... external_declaration function_definition { type_specifier ID	, ID ; ID = ......	shift	I0 I2 I2 I2 I10 I16 I37 I14	s14		
243	...... function_definition { type_specifier ID declaration_assign	, ID ; ID = ......	reduce(declaration_assign->$ ,['#'])	I0 I2 I2 I2 I10 I16 I37 I14 I21	r42	I21	
244	...... external_declaration function_definition { type_specifier declaration_init	, ID ; ID = ......	reduce(declaration_init->ID declaration_assign ,['#'])	I0 I2 I2 I2 I10 I16 I37 I68	r43	I68	
245	...... function_definition { type_specifier declaration_init ,	ID ; ID = function ......	shift	I0 I2 I2 I2 I10 I16 I37 I68 I19	s19		
246	...... { type_specifier declaration_init , ID	; ID = function ID ......	shift	I0 I2 I2 I2 I10 I16 I37 I68 I19 I14	s14		
247	...... type_specifier declaration_init , ID declaration_assign	; ID = function ID ......	reduce(declaration_assign->$ ,['#'])	I0 I2 I2 I2 I10 I16 I37 I68 I19 I14 I21	r42	I21	
248	...... { type_specifier declaration_init , declaration_init	; ID = function ID ......	reduce(declaration_init->ID declaration_assign ,['#'])	I0 I2 I2 I2 I10 I16 I37 I68 I19 I43	r43	I43	
249	...... type_specifier declaration_init , declaration_init declaration_init_list	; ID = function ID ......	reduce(declaration_init_list->$ ,['#'])	I0 I2 I2 I2 I10 I16 I37 I68 I19 I43 I80	r45	I80	
250	...... function_definition { type_specifier declaration_init declaration_init_list	; ID = function ID ......	reduce(declaration_init_list->, declaration_init declaration_init_list ,['#'])	I0 I2 I2 I2 I10 I16 I37 I68 I110	r44	I110	
251	...... { type_specifier declaration_init declaration_init_list ;	ID = function ID ( ......	shift	I0 I2 I2 I2 I10 I16 I37 I68 I110 I131	s131		
252	...... external_declaration external_declaration function_definition { declaration	ID = function ID ( ......	reduce(declaration->type_specifier declaration_init declaration_init_list ; ,['#'])	I0 I2 I2 I2 I10 I16 I24	r46	I24	
253	...... external_declaration external_declaration function_definition { statement	ID = function ID ( ......	reduce(statement->declaration ,['#'])	I0 I2 I2 I2 I10 I16 I35	r59	I35	
254	...... external_declaration function_definition { statement ID	= function ID ( number ......	shift	I0 I2 I2 I2 I10 I16 I35 I29	s29		
255	...... function_definition { statement ID =	function ID ( number ) ......	shift	I0 I2 I2 I2 I10 I16 I35 I29 I56	s56		
256	...... function_definition { statement ID assignment_operator	function ID ( number ) ......	reduce(assignment_operator->= ,['#'])	I0 I2 I2 I2 I10 I16 I35 I29 I59	r19	I59	
257	...... { statement ID assignment_operator function	ID ( number ) ; ......	shift	I0 I2 I2 I2 I10 I16 I35 I29 I59 I44	s44		
258	...... statement ID assignment_operator function ID	( number ) ; int ......	shift	I0 I2 I2 I2 I10 I16 I35 I29 I59 I44 I81	s81		
259	...... ID assignment_operator function ID (	number ) ; int ID ......	shift	I0 I2 I2 I2 I10 I16 I35 I29 I59 I44 I81 I122	s122		
260	...... assignment_operator function ID ( number	) ; int ID = ......	shift	I0 I2 I2 I2 I10 I16 I35 I29 I59 I44 I81 I122 I147	s147		
261	...... assignment_operator function ID ( primary_expression	) ; int ID = ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I16 I35 I29 I59 I44 I81 I122 I149	r5	I149	
262	...... function ID ( primary_expression arithmetic_expression	) ; int ID = ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I29 I59 I44 I81 I122 I149 I182	r17	I182	
263	...... assignment_operator function ID ( constant_expression	) ; int ID = ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I29 I59 I44 I81 I122 I148	r18	I148	
264	...... assignment_operator function ID ( expression	) ; int ID = ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I29 I59 I44 I81 I122 I146	r31	I146	
265	...... function ID ( expression expression_profix	) ; int ID = ......	reduce(expression_profix->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I29 I59 I44 I81 I122 I146 I180	r34	I180	
266	...... assignment_operator function ID ( expression_list	) ; int ID = ......	reduce(expression_list->expression expression_profix ,['#'])	I0 I2 I2 I2 I10 I16 I35 I29 I59 I44 I81 I122 I144	r35	I144	
267	...... function ID ( expression_list )	; int ID = number ......	shift	I0 I2 I2 I2 I10 I16 I35 I29 I59 I44 I81 I122 I144 I178	s178		
268	...... { statement ID assignment_operator function_expression	; int ID = number ......	reduce(function_expression->function ID ( expression_list ) ,['#'])	I0 I2 I2 I2 I10 I16 I35 I29 I59 I47	r30	I47	
269	...... { statement ID assignment_operator expression	; int ID = number ......	reduce(expression->function_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I29 I59 I105	r32	I105	
270	...... external_declaration function_definition { statement assignment_expression	; int ID = number ......	reduce(assignment_expression->ID assignment_operator expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I33	r25	I33	
271	...... function_definition { statement assignment_expression assignment_expression_profix	; int ID = number ......	reduce(assignment_expression_profix->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I33 I64	r27	I64	
272	...... external_declaration function_definition { statement assignment_expression_list	; int ID = number ......	reduce(assignment_expression_list->assignment_expression assignment_expression_profix ,['#'])	I0 I2 I2 I2 I10 I16 I35 I34	r28	I34	
273	...... function_definition { statement assignment_expression_list ;	int ID = number , ......	shift	I0 I2 I2 I2 I10 I16 I35 I34 I66	s66		
274	...... external_declaration function_definition { statement expression_statement	int ID = number , ......	reduce(expression_statement->assignment_expression_list ; ,['#'])	I0 I2 I2 I2 I10 I16 I35 I27	r62	I27	
275	...... external_declaration function_definition { statement statement	int ID = number , ......	reduce(statement->expression_statement ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35	r54	I35	
276	...... function_definition { statement statement int	ID = number , ID ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I8	s8		
277	...... function_definition { statement statement type_specifier	ID = number , ID ......	reduce(type_specifier->int ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37	r39	I37	
278	...... { statement statement type_specifier ID	= number , ID = ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I37 I14	s14		
279	...... statement statement type_specifier ID =	number , ID = number ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I37 I14 I20	s20		
280	...... statement type_specifier ID = number	, ID = number , ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I37 I14 I20 I48	s48		
281	...... statement type_specifier ID = primary_expression	, ID = number , ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I14 I20 I50	r5	I50	
282	...... type_specifier ID = primary_expression arithmetic_expression	, ID = number , ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I14 I20 I50 I87	r17	I87	
283	...... statement type_specifier ID = constant_expression	, ID = number , ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I14 I20 I49	r18	I49	
284	...... statement type_specifier ID = expression	, ID = number , ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I14 I20 I45	r31	I45	
285	...... statement statement type_specifier ID declaration_assign	, ID = number , ......	reduce(declaration_assign->= expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I14 I21	r41	I21	
286	...... { statement statement type_specifier declaration_init	, ID = number , ......	reduce(declaration_init->ID declaration_assign ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68	r43	I68	
287	...... statement statement type_specifier declaration_init ,	ID = number , ID ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19	s19		
288	...... statement type_specifier declaration_init , ID	= number , ID = ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I14	s14		
289	...... type_specifier declaration_init , ID =	number , ID = number ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I14 I20	s20		
290	...... declaration_init , ID = number	, ID = number , ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I14 I20 I48	s48		
291	...... declaration_init , ID = primary_expression	, ID = number , ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I14 I20 I50	r5	I50	
292	...... , ID = primary_expression arithmetic_expression	, ID = number , ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I14 I20 I50 I87	r17	I87	
293	...... declaration_init , ID = constant_expression	, ID = number , ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I14 I20 I49	r18	I49	
294	...... declaration_init , ID = expression	, ID = number , ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I14 I20 I45	r31	I45	
295	...... type_specifier declaration_init , ID declaration_assign	, ID = number , ......	reduce(declaration_assign->= expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I14 I21	r41	I21	
296	...... statement type_specifier declaration_init , declaration_init	, ID = number , ......	reduce(declaration_init->ID declaration_assign ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43	r43	I43	
297	...... type_specifier declaration_init , declaration_init ,	ID = number , ID ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19	s19		
298	...... declaration_init , declaration_init , ID	= number , ID = ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I14	s14		
299	...... , declaration_init , ID =	number , ID = number ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I14 I20	s20		
300	...... declaration_init , ID = number	, ID = number * ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I14 I20 I48	s48		
301	...... declaration_init , ID = primary_expression	, ID = number * ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I14 I20 I50	r5	I50	
302	...... , ID = primary_expression arithmetic_expression	, ID = number * ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I14 I20 I50 I87	r17	I87	
303	...... declaration_init , ID = constant_expression	, ID = number * ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I14 I20 I49	r18	I49	
304	...... declaration_init , ID = expression	, ID = number * ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I14 I20 I45	r31	I45	
305	...... , declaration_init , ID declaration_assign	, ID = number * ......	reduce(declaration_assign->= expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I14 I21	r41	I21	
306	...... declaration_init , declaration_init , declaration_init	, ID = number * ......	reduce(declaration_init->ID declaration_assign ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I43	r43	I43	
307	...... , declaration_init , declaration_init ,	ID = number * number ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I43 I19	s19		
308	...... declaration_init , declaration_init , ID	= number * number + ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I43 I19 I14	s14		
309	...... , declaration_init , ID =	number * number + number ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I43 I19 I14 I20	s20		
310	...... declaration_init , ID = number	* number + number - ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I43 I19 I14 I20 I48	s48		
311	...... declaration_init , ID = primary_expression	* number + number - ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I43 I19 I14 I20 I50	r5	I50	
312	...... , ID = primary_expression *	number + number - number ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I43 I19 I14 I20 I50 I84	s84		
313	...... , ID = primary_expression operator	number + number - number ......	reduce(operator->* ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I43 I19 I14 I20 I50 I85	r9	I85	
314	...... ID = primary_expression operator number	+ number - number ; ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I43 I19 I14 I20 I50 I85 I48	s48		
315	...... ID = primary_expression operator primary_expression	+ number - number ; ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I43 I19 I14 I20 I50 I85 I123	r5	I123	
316	...... = primary_expression operator primary_expression +	number - number ; int ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I43 I19 I14 I20 I50 I85 I123 I83	s83		
317	...... = primary_expression operator primary_expression operator	number - number ; int ......	reduce(operator->+ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I43 I19 I14 I20 I50 I85 I123 I85	r7	I85	
318	...... primary_expression operator primary_expression operator number	- number ; int ID ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I43 I19 I14 I20 I50 I85 I123 I85 I48	s48		
319	...... primary_expression operator primary_expression operator primary_expression	- number ; int ID ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I43 I19 I14 I20 I50 I85 I123 I85 I123	r5	I123	
320	...... operator primary_expression operator primary_expression -	number ; int ID = ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I43 I19 I14 I20 I50 I85 I123 I85 I123 I92	s92		
321	...... operator primary_expression operator primary_expression operator	number ; int ID = ......	reduce(operator->- ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I43 I19 I14 I20 I50 I85 I123 I85 I123 I85	r8	I85	
322	...... primary_expression operator primary_expression operator number	; int ID = number ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I43 I19 I14 I20 I50 I85 I123 I85 I123 I85 I48	s48		
323	...... primary_expression operator primary_expression operator primary_expression	; int ID = number ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I43 I19 I14 I20 I50 I85 I123 I85 I123 I85 I123	r5	I123	
324	...... operator primary_expression operator primary_expression arithmetic_expression	; int ID = number ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I43 I19 I14 I20 I50 I85 I123 I85 I123 I85 I123 I151	r17	I151	
325	...... operator primary_expression operator primary_expression arithmetic_expression	; int ID = number ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I43 I19 I14 I20 I50 I85 I123 I85 I123 I151	r16	I151	
326	...... = primary_expression operator primary_expression arithmetic_expression	; int ID = number ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I43 I19 I14 I20 I50 I85 I123 I151	r16	I151	
327	...... , ID = primary_expression arithmetic_expression	; int ID = number ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I43 I19 I14 I20 I50 I87	r16	I87	
328	...... declaration_init , ID = constant_expression	; int ID = number ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I43 I19 I14 I20 I49	r18	I49	
329	...... declaration_init , ID = expression	; int ID = number ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I43 I19 I14 I20 I45	r31	I45	
330	...... , declaration_init , ID declaration_assign	; int ID = number ......	reduce(declaration_assign->= expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I43 I19 I14 I21	r41	I21	
331	...... declaration_init , declaration_init , declaration_init	; int ID = number ......	reduce(declaration_init->ID declaration_assign ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I43 I19 I43	r43	I43	
332	...... , declaration_init , declaration_init declaration_init_list	; int ID = number ......	reduce(declaration_init_list->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I43 I19 I43 I80	r45	I80	
333	...... , declaration_init , declaration_init declaration_init_list	; int ID = number ......	reduce(declaration_init_list->, declaration_init declaration_init_list ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I19 I43 I80	r44	I80	
334	...... type_specifier declaration_init , declaration_init declaration_init_list	; int ID = number ......	reduce(declaration_init_list->, declaration_init declaration_init_list ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I19 I43 I80	r44	I80	
335	...... statement statement type_specifier declaration_init declaration_init_list	; int ID = number ......	reduce(declaration_init_list->, declaration_init declaration_init_list ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I110	r44	I110	
336	...... statement type_specifier declaration_init declaration_init_list ;	int ID = number ; ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I37 I68 I110 I131	s131		
337	...... function_definition { statement statement declaration	int ID = number ; ......	reduce(declaration->type_specifier declaration_init declaration_init_list ; ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I24	r46	I24	
338	...... function_definition { statement statement statement	int ID = number ; ......	reduce(statement->declaration ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35	r59	I35	
339	...... { statement statement statement int	ID = number ; for ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I8	s8		
340	...... { statement statement statement type_specifier	ID = number ; for ......	reduce(type_specifier->int ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I37	r39	I37	
341	...... statement statement statement type_specifier ID	= number ; for ( ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I37 I14	s14		
342	...... statement statement type_specifier ID =	number ; for ( int ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I37 I14 I20	s20		
343	...... statement type_specifier ID = number	; for ( int ID ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I37 I14 I20 I48	s48		
344	...... statement type_specifier ID = primary_expression	; for ( int ID ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I37 I14 I20 I50	r5	I50	
345	...... type_specifier ID = primary_expression arithmetic_expression	; for ( int ID ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I37 I14 I20 I50 I87	r17	I87	
346	...... statement type_specifier ID = constant_expression	; for ( int ID ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I37 I14 I20 I49	r18	I49	
347	...... statement type_specifier ID = expression	; for ( int ID ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I37 I14 I20 I45	r31	I45	
348	...... statement statement type_specifier ID declaration_assign	; for ( int ID ......	reduce(declaration_assign->= expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I37 I14 I21	r41	I21	
349	...... statement statement statement type_specifier declaration_init	; for ( int ID ......	reduce(declaration_init->ID declaration_assign ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I37 I68	r43	I68	
350	...... statement statement type_specifier declaration_init declaration_init_list	; for ( int ID ......	reduce(declaration_init_list->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I37 I68 I110	r45	I110	
351	...... statement type_specifier declaration_init declaration_init_list ;	for ( int ID = ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I37 I68 I110 I131	s131		
352	...... { statement statement statement declaration	for ( int ID = ......	reduce(declaration->type_specifier declaration_init declaration_init_list ; ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I24	r46	I24	
353	...... { statement statement statement statement	for ( int ID = ......	reduce(statement->declaration ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35	r59	I35	
354	...... statement statement statement statement for	( int ID = number ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39	s39		
355	...... statement statement statement for (	int ID = number ; ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70	s70		
356	...... statement statement for ( int	ID = number ; ID ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I8	s8		
357	...... statement statement for ( type_specifier	ID = number ; ID ......	reduce(type_specifier->int ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I112	r39	I112	
358	...... statement for ( type_specifier ID	= number ; ID < ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I112 I14	s14		
359	...... for ( type_specifier ID =	number ; ID < number ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I112 I14 I20	s20		
360	...... ( type_specifier ID = number	; ID < number ; ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I112 I14 I20 I48	s48		
361	...... ( type_specifier ID = primary_expression	; ID < number ; ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I112 I14 I20 I50	r5	I50	
362	...... type_specifier ID = primary_expression arithmetic_expression	; ID < number ; ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I112 I14 I20 I50 I87	r17	I87	
363	...... ( type_specifier ID = constant_expression	; ID < number ; ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I112 I14 I20 I49	r18	I49	
364	...... ( type_specifier ID = expression	; ID < number ; ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I112 I14 I20 I45	r31	I45	
365	...... for ( type_specifier ID declaration_assign	; ID < number ; ......	reduce(declaration_assign->= expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I112 I14 I21	r41	I21	
366	...... statement for ( type_specifier declaration_init	; ID < number ; ......	reduce(declaration_init->ID declaration_assign ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I112 I133	r43	I133	
367	...... for ( type_specifier declaration_init declaration_init_list	; ID < number ; ......	reduce(declaration_init_list->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I112 I133 I172	r45	I172	
368	...... ( type_specifier declaration_init declaration_init_list ;	ID < number ; ID ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I112 I133 I172 I196	s196		
369	...... statement statement for ( declaration	ID < number ; ID ......	reduce(declaration->type_specifier declaration_init declaration_init_list ; ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113	r46	I113	
370	...... statement for ( declaration ID	< number ; ID + ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I72	s72		
371	...... statement for ( declaration primary_expression	< number ; ID + ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I77	r4	I77	
372	...... for ( declaration primary_expression <	number ; ID + = ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I77 I88	s88		
373	...... for ( declaration primary_expression operator	number ; ID + = ......	reduce(operator->< ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I77 I116	r12	I116	
374	...... ( declaration primary_expression operator number	; ID + = number ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I77 I116 I75	s75		
375	...... ( declaration primary_expression operator primary_expression	; ID + = number ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I77 I116 I136	r5	I136	
376	...... declaration primary_expression operator primary_expression arithmetic_expression	; ID + = number ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I77 I116 I136 I175	r17	I175	
377	...... for ( declaration primary_expression arithmetic_expression	; ID + = number ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I77 I117	r16	I117	
378	...... statement for ( declaration constant_expression	; ID + = number ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I76	r18	I76	
379	...... statement for ( declaration expression	; ID + = number ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134	r31	I134	
380	...... for ( declaration expression ;	ID + = number ) ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173	s173		
381	...... ( declaration expression ; ID	+ = number ) { ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I197	s197		
382	...... declaration expression ; ID +	= number ) { if ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I197 I55	s55		
383	...... expression ; ID + =	number ) { if ( ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I197 I55 I102	s102		
384	...... declaration expression ; ID assignment_operator	number ) { if ( ......	reduce(assignment_operator->+ = ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I197 I213	r20	I213	
385	...... expression ; ID assignment_operator number	) { if ( ID ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I197 I213 I96	s96		
386	...... expression ; ID assignment_operator primary_expression	) { if ( ID ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I197 I213 I98	r5	I98	
387	...... ; ID assignment_operator primary_expression arithmetic_expression	) { if ( ID ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I197 I213 I98 I126	r17	I126	
388	...... expression ; ID assignment_operator constant_expression	) { if ( ID ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I197 I213 I97	r18	I97	
389	...... expression ; ID assignment_operator expression	) { if ( ID ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I197 I213 I222	r31	I222	
390	...... ( declaration expression ; assignment_expression	) { if ( ID ......	reduce(assignment_expression->ID assignment_operator expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198	r25	I198	
391	...... declaration expression ; assignment_expression )	{ if ( ID < ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214	s214		
392	...... expression ; assignment_expression ) {	if ( ID < number ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32	s32		
393	...... ; assignment_expression ) { if	( ID < number ) ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38	s38		
394	...... assignment_expression ) { if (	ID < number ) continue ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69	s69		
395	...... ) { if ( ID	< number ) continue ; ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69 I94	s94		
396	...... ) { if ( primary_expression	< number ) continue ; ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69 I98	r4	I98	
397	...... { if ( primary_expression <	number ) continue ; else ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69 I98 I88	s88		
398	...... { if ( primary_expression operator	number ) continue ; else ......	reduce(operator->< ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69 I98 I125	r12	I125	
399	...... if ( primary_expression operator number	) continue ; else ID ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69 I98 I125 I96	s96		
400	...... if ( primary_expression operator primary_expression	) continue ; else ID ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69 I98 I125 I153	r5	I153	
401	...... ( primary_expression operator primary_expression arithmetic_expression	) continue ; else ID ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69 I98 I125 I153 I185	r17	I185	
402	...... { if ( primary_expression arithmetic_expression	) continue ; else ID ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69 I98 I126	r16	I126	
403	...... ) { if ( constant_expression	) continue ; else ID ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69 I97	r18	I97	
404	...... ) { if ( expression	) continue ; else ID ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69 I111	r31	I111	
405	...... { if ( expression )	continue ; else ID + ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69 I111 I132	s132		
406	...... if ( expression ) continue	; else ID + = ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69 I111 I132 I162	s162		
407	...... ( expression ) continue ;	else ID + = ID ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69 I111 I132 I162 I188	s188		
408	...... if ( expression ) jump_statement	else ID + = ID ......	reduce(jump_statement->continue ; ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69 I111 I132 I160	r63	I160	
409	...... if ( expression ) statement	else ID + = ID ......	reduce(statement->jump_statement ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69 I111 I132 I159	r55	I159	
410	...... ( expression ) statement else	ID + = ID ; ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69 I111 I132 I159 I187	s187		
411	...... expression ) statement else ID	+ = ID ; if ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69 I111 I132 I159 I187 I29	s29		
412	...... ) statement else ID +	= ID ; if ( ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69 I111 I132 I159 I187 I29 I55	s55		
413	...... statement else ID + =	ID ; if ( ID ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69 I111 I132 I159 I187 I29 I55 I102	s102		
414	...... ) statement else ID assignment_operator	ID ; if ( ID ......	reduce(assignment_operator->+ = ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69 I111 I132 I159 I187 I29 I59	r20	I59	
415	...... statement else ID assignment_operator ID	; if ( ID > ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69 I111 I132 I159 I187 I29 I59 I46	s46		
416	...... statement else ID assignment_operator primary_expression	; if ( ID > ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69 I111 I132 I159 I187 I29 I59 I50	r4	I50	
417	...... else ID assignment_operator primary_expression arithmetic_expression	; if ( ID > ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69 I111 I132 I159 I187 I29 I59 I50 I87	r17	I87	
418	...... statement else ID assignment_operator constant_expression	; if ( ID > ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69 I111 I132 I159 I187 I29 I59 I49	r18	I49	
419	...... statement else ID assignment_operator expression	; if ( ID > ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69 I111 I132 I159 I187 I29 I59 I105	r31	I105	
420	...... expression ) statement else assignment_expression	; if ( ID > ......	reduce(assignment_expression->ID assignment_operator expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69 I111 I132 I159 I187 I33	r25	I33	
421	...... ) statement else assignment_expression assignment_expression_profix	; if ( ID > ......	reduce(assignment_expression_profix->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69 I111 I132 I159 I187 I33 I64	r27	I64	
422	...... expression ) statement else assignment_expression_list	; if ( ID > ......	reduce(assignment_expression_list->assignment_expression assignment_expression_profix ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69 I111 I132 I159 I187 I34	r28	I34	
423	...... ) statement else assignment_expression_list ;	if ( ID > number ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69 I111 I132 I159 I187 I34 I66	s66		
424	...... expression ) statement else expression_statement	if ( ID > number ......	reduce(expression_statement->assignment_expression_list ; ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69 I111 I132 I159 I187 I27	r62	I27	
425	...... expression ) statement else statement	if ( ID > number ......	reduce(statement->expression_statement ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I38 I69 I111 I132 I159 I187 I207	r54	I207	
426	...... ; assignment_expression ) { selection_statement	if ( ID > number ......	reduce(selection_statement->if ( expression ) statement else statement ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I30	r66	I30	
427	...... ; assignment_expression ) { statement	if ( ID > number ......	reduce(statement->selection_statement ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35	r56	I35	
428	...... assignment_expression ) { statement if	( ID > number ) ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38	s38		
429	...... ) { statement if (	ID > number ) break ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69	s69		
430	...... { statement if ( ID	> number ) break ; ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I94	s94		
431	...... { statement if ( primary_expression	> number ) break ; ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I98	r4	I98	
432	...... statement if ( primary_expression >	number ) break ; else ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I98 I90	s90		
433	...... statement if ( primary_expression operator	number ) break ; else ......	reduce(operator->> ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I98 I125	r13	I125	
434	...... if ( primary_expression operator number	) break ; else ID ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I98 I125 I96	s96		
435	...... if ( primary_expression operator primary_expression	) break ; else ID ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I98 I125 I153	r5	I153	
436	...... ( primary_expression operator primary_expression arithmetic_expression	) break ; else ID ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I98 I125 I153 I185	r17	I185	
437	...... statement if ( primary_expression arithmetic_expression	) break ; else ID ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I98 I126	r16	I126	
438	...... { statement if ( constant_expression	) break ; else ID ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I97	r18	I97	
439	...... { statement if ( expression	) break ; else ID ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111	r31	I111	
440	...... statement if ( expression )	break ; else ID = ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132	s132		
441	...... if ( expression ) break	; else ID = number ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I164	s164		
442	...... ( expression ) break ;	else ID = number + ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I164 I189	s189		
443	...... if ( expression ) jump_statement	else ID = number + ......	reduce(jump_statement->break ; ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I160	r64	I160	
444	...... if ( expression ) statement	else ID = number + ......	reduce(statement->jump_statement ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159	r55	I159	
445	...... ( expression ) statement else	ID = number + number ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187	s187		
446	...... expression ) statement else ID	= number + number , ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I29	s29		
447	...... ) statement else ID =	number + number , ID ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I29 I56	s56		
448	...... ) statement else ID assignment_operator	number + number , ID ......	reduce(assignment_operator->= ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I29 I59	r19	I59	
449	...... statement else ID assignment_operator number	+ number , ID = ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I29 I59 I48	s48		
450	...... statement else ID assignment_operator primary_expression	+ number , ID = ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I29 I59 I50	r5	I50	
451	...... else ID assignment_operator primary_expression +	number , ID = number ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I29 I59 I50 I83	s83		
452	...... else ID assignment_operator primary_expression operator	number , ID = number ......	reduce(operator->+ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I29 I59 I50 I85	r7	I85	
453	...... ID assignment_operator primary_expression operator number	, ID = number * ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I29 I59 I50 I85 I48	s48		
454	...... ID assignment_operator primary_expression operator primary_expression	, ID = number * ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I29 I59 I50 I85 I123	r5	I123	
455	...... assignment_operator primary_expression operator primary_expression arithmetic_expression	, ID = number * ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I29 I59 I50 I85 I123 I151	r17	I151	
456	...... else ID assignment_operator primary_expression arithmetic_expression	, ID = number * ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I29 I59 I50 I87	r16	I87	
457	...... statement else ID assignment_operator constant_expression	, ID = number * ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I29 I59 I49	r18	I49	
458	...... statement else ID assignment_operator expression	, ID = number * ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I29 I59 I105	r31	I105	
459	...... expression ) statement else assignment_expression	, ID = number * ......	reduce(assignment_expression->ID assignment_operator expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I33	r25	I33	
460	...... ) statement else assignment_expression ,	ID = number * number ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I33 I65	s65		
461	...... statement else assignment_expression , ID	= number * number , ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I33 I65 I29	s29		
462	...... else assignment_expression , ID =	number * number , ID ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I33 I65 I29 I56	s56		
463	...... else assignment_expression , ID assignment_operator	number * number , ID ......	reduce(assignment_operator->= ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I33 I65 I29 I59	r19	I59	
464	...... assignment_expression , ID assignment_operator number	* number , ID + ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I33 I65 I29 I59 I48	s48		
465	...... assignment_expression , ID assignment_operator primary_expression	* number , ID + ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I33 I65 I29 I59 I50	r5	I50	
466	...... , ID assignment_operator primary_expression *	number , ID + = ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I33 I65 I29 I59 I50 I84	s84		
467	...... , ID assignment_operator primary_expression operator	number , ID + = ......	reduce(operator->* ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I33 I65 I29 I59 I50 I85	r9	I85	
468	...... ID assignment_operator primary_expression operator number	, ID + = ID ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I33 I65 I29 I59 I50 I85 I48	s48		
469	...... ID assignment_operator primary_expression operator primary_expression	, ID + = ID ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I33 I65 I29 I59 I50 I85 I123	r5	I123	
470	...... assignment_operator primary_expression operator primary_expression arithmetic_expression	, ID + = ID ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I33 I65 I29 I59 I50 I85 I123 I151	r17	I151	
471	...... , ID assignment_operator primary_expression arithmetic_expression	, ID + = ID ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I33 I65 I29 I59 I50 I87	r16	I87	
472	...... assignment_expression , ID assignment_operator constant_expression	, ID + = ID ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I33 I65 I29 I59 I49	r18	I49	
473	...... assignment_expression , ID assignment_operator expression	, ID + = ID ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I33 I65 I29 I59 I105	r31	I105	
474	...... statement else assignment_expression , assignment_expression	, ID + = ID ......	reduce(assignment_expression->ID assignment_operator expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I33 I65 I109	r25	I109	
475	...... else assignment_expression , assignment_expression ,	ID + = ID ; ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I33 I65 I109 I65	s65		
476	...... assignment_expression , assignment_expression , ID	+ = ID ; } ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I33 I65 I109 I65 I29	s29		
477	...... , assignment_expression , ID +	= ID ; } int ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I33 I65 I109 I65 I29 I55	s55		
478	...... assignment_expression , ID + =	ID ; } int ID ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I33 I65 I109 I65 I29 I55 I102	s102		
479	...... , assignment_expression , ID assignment_operator	ID ; } int ID ......	reduce(assignment_operator->+ = ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I33 I65 I109 I65 I29 I59	r20	I59	
480	...... assignment_expression , ID assignment_operator ID	; } int ID = ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I33 I65 I109 I65 I29 I59 I46	s46		
481	...... assignment_expression , ID assignment_operator primary_expression	; } int ID = ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I33 I65 I109 I65 I29 I59 I50	r4	I50	
482	...... , ID assignment_operator primary_expression arithmetic_expression	; } int ID = ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I33 I65 I109 I65 I29 I59 I50 I87	r17	I87	
483	...... assignment_expression , ID assignment_operator constant_expression	; } int ID = ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I33 I65 I109 I65 I29 I59 I49	r18	I49	
484	...... assignment_expression , ID assignment_operator expression	; } int ID = ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I33 I65 I109 I65 I29 I59 I105	r31	I105	
485	...... assignment_expression , assignment_expression , assignment_expression	; } int ID = ......	reduce(assignment_expression->ID assignment_operator expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I33 I65 I109 I65 I109	r25	I109	
486	...... , assignment_expression , assignment_expression assignment_expression_profix	; } int ID = ......	reduce(assignment_expression_profix->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I33 I65 I109 I65 I109 I130	r27	I130	
487	...... else assignment_expression , assignment_expression assignment_expression_profix	; } int ID = ......	reduce(assignment_expression_profix->, assignment_expression assignment_expression_profix ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I33 I65 I109 I130	r26	I130	
488	...... ) statement else assignment_expression assignment_expression_profix	; } int ID = ......	reduce(assignment_expression_profix->, assignment_expression assignment_expression_profix ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I33 I64	r26	I64	
489	...... expression ) statement else assignment_expression_list	; } int ID = ......	reduce(assignment_expression_list->assignment_expression assignment_expression_profix ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I34	r28	I34	
490	...... ) statement else assignment_expression_list ;	} int ID = function ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I34 I66	s66		
491	...... expression ) statement else expression_statement	} int ID = function ......	reduce(expression_statement->assignment_expression_list ; ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I27	r62	I27	
492	...... expression ) statement else statement	} int ID = function ......	reduce(statement->expression_statement ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I38 I69 I111 I132 I159 I187 I207	r54	I207	
493	...... assignment_expression ) { statement selection_statement	} int ID = function ......	reduce(selection_statement->if ( expression ) statement else statement ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I30	r66	I30	
494	...... assignment_expression ) { statement statement	} int ID = function ......	reduce(statement->selection_statement ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I35	r56	I35	
495	...... ) { statement statement statement_list	} int ID = function ......	reduce(statement_list->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I35 I67	r61	I67	
496	...... assignment_expression ) { statement statement_list	} int ID = function ......	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I35 I67	r60	I67	
497	...... ; assignment_expression ) { statement_list	} int ID = function ......	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I63	r60	I63	
498	...... assignment_expression ) { statement_list }	int ID = function ID ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I32 I63 I108	s108		
499	...... expression ; assignment_expression ) compound_statement	int ID = function ID ......	reduce(compound_statement->{ statement_list } ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I36	r69	I36	
500	...... expression ; assignment_expression ) statement	int ID = function ID ......	reduce(statement->compound_statement ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I39 I70 I113 I134 I173 I198 I214 I223	r58	I223	
501	...... statement statement statement statement iteration_statement	int ID = function ID ......	reduce(iteration_statement->for ( declaration expression ; assignment_expression ) statement ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I22	r68	I22	
502	...... statement statement statement statement statement	int ID = function ID ......	reduce(statement->iteration_statement ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35	r57	I35	
503	...... statement statement statement statement int	ID = function ID ( ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I8	s8		
504	...... statement statement statement statement type_specifier	ID = function ID ( ......	reduce(type_specifier->int ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I37	r39	I37	
505	...... statement statement statement type_specifier ID	= function ID ( ID ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I37 I14	s14		
506	...... statement statement type_specifier ID =	function ID ( ID , ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I37 I14 I20	s20		
507	...... statement type_specifier ID = function	ID ( ID , ID ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I37 I14 I20 I44	s44		
508	...... type_specifier ID = function ID	( ID , ID ) ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I37 I14 I20 I44 I81	s81		
509	...... ID = function ID (	ID , ID ) ; ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I37 I14 I20 I44 I81 I122	s122		
510	...... = function ID ( ID	, ID ) ; int ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I37 I14 I20 I44 I81 I122 I143	s143		
511	...... = function ID ( primary_expression	, ID ) ; int ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I37 I14 I20 I44 I81 I122 I149	r4	I149	
512	...... function ID ( primary_expression arithmetic_expression	, ID ) ; int ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I37 I14 I20 I44 I81 I122 I149 I182	r17	I182	
513	...... = function ID ( constant_expression	, ID ) ; int ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I37 I14 I20 I44 I81 I122 I148	r18	I148	
514	...... = function ID ( expression	, ID ) ; int ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I37 I14 I20 I44 I81 I122 I146	r31	I146	
515	...... function ID ( expression ,	ID ) ; int ID ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I37 I14 I20 I44 I81 I122 I146 I179	s179		
516	...... ID ( expression , ID	) ; int ID = ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I37 I14 I20 I44 I81 I122 I146 I179 I143	s143		
517	...... ID ( expression , primary_expression	) ; int ID = ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I37 I14 I20 I44 I81 I122 I146 I179 I149	r4	I149	
518	...... ( expression , primary_expression arithmetic_expression	) ; int ID = ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I37 I14 I20 I44 I81 I122 I146 I179 I149 I182	r17	I182	
519	...... ID ( expression , constant_expression	) ; int ID = ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I37 I14 I20 I44 I81 I122 I146 I179 I148	r18	I148	
520	...... ID ( expression , expression	) ; int ID = ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I37 I14 I20 I44 I81 I122 I146 I179 I202	r31	I202	
521	...... ( expression , expression expression_profix	) ; int ID = ......	reduce(expression_profix->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I37 I14 I20 I44 I81 I122 I146 I179 I202 I216	r34	I216	
522	...... function ID ( expression expression_profix	) ; int ID = ......	reduce(expression_profix->, expression expression_profix ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I37 I14 I20 I44 I81 I122 I146 I180	r33	I180	
523	...... = function ID ( expression_list	) ; int ID = ......	reduce(expression_list->expression expression_profix ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I37 I14 I20 I44 I81 I122 I144	r35	I144	
524	...... function ID ( expression_list )	; int ID = number ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I37 I14 I20 I44 I81 I122 I144 I178	s178		
525	...... statement type_specifier ID = function_expression	; int ID = number ......	reduce(function_expression->function ID ( expression_list ) ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I37 I14 I20 I47	r30	I47	
526	...... statement type_specifier ID = expression	; int ID = number ......	reduce(expression->function_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I37 I14 I20 I45	r32	I45	
527	...... statement statement type_specifier ID declaration_assign	; int ID = number ......	reduce(declaration_assign->= expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I37 I14 I21	r41	I21	
528	...... statement statement statement type_specifier declaration_init	; int ID = number ......	reduce(declaration_init->ID declaration_assign ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I37 I68	r43	I68	
529	...... statement statement type_specifier declaration_init declaration_init_list	; int ID = number ......	reduce(declaration_init_list->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I37 I68 I110	r45	I110	
530	...... statement type_specifier declaration_init declaration_init_list ;	int ID = number * ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I37 I68 I110 I131	s131		
531	...... statement statement statement statement declaration	int ID = number * ......	reduce(declaration->type_specifier declaration_init declaration_init_list ; ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I24	r46	I24	
532	...... statement statement statement statement statement	int ID = number * ......	reduce(statement->declaration ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35	r59	I35	
533	...... statement statement statement statement int	ID = number * number ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I8	s8		
534	...... statement statement statement statement type_specifier	ID = number * number ......	reduce(type_specifier->int ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37	r39	I37	
535	...... statement statement statement type_specifier ID	= number * number + ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14	s14		
536	...... statement statement type_specifier ID =	number * number + number ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20	s20		
537	...... statement type_specifier ID = number	* number + number / ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I48	s48		
538	...... statement type_specifier ID = primary_expression	* number + number / ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50	r5	I50	
539	...... type_specifier ID = primary_expression *	number + number / ( ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I84	s84		
540	...... type_specifier ID = primary_expression operator	number + number / ( ......	reduce(operator->* ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85	r9	I85	
541	...... ID = primary_expression operator number	+ number / ( number ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I48	s48		
542	...... ID = primary_expression operator primary_expression	+ number / ( number ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123	r5	I123	
543	...... = primary_expression operator primary_expression +	number / ( number * ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I83	s83		
544	...... = primary_expression operator primary_expression operator	number / ( number * ......	reduce(operator->+ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85	r7	I85	
545	...... primary_expression operator primary_expression operator number	/ ( number * number ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I48	s48		
546	...... primary_expression operator primary_expression operator primary_expression	/ ( number * number ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123	r5	I123	
547	...... operator primary_expression operator primary_expression /	( number * number ) ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I82	s82		
548	...... operator primary_expression operator primary_expression operator	( number * number ) ......	reduce(operator->/ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85	r10	I85	
549	...... primary_expression operator primary_expression operator (	number * number ) - ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I51	s51		
550	...... operator primary_expression operator ( number	* number ) - number ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I51 I96	s96		
551	...... operator primary_expression operator ( primary_expression	* number ) - number ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I51 I98	r5	I98	
552	...... primary_expression operator ( primary_expression *	number ) - number + ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I51 I98 I84	s84		
553	...... primary_expression operator ( primary_expression operator	number ) - number + ......	reduce(operator->* ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I51 I98 I125	r9	I125	
554	...... operator ( primary_expression operator number	) - number + ID ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I51 I98 I125 I96	s96		
555	...... operator ( primary_expression operator primary_expression	) - number + ID ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I51 I98 I125 I153	r5	I153	
556	...... ( primary_expression operator primary_expression arithmetic_expression	) - number + ID ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I51 I98 I125 I153 I185	r17	I185	
557	...... primary_expression operator ( primary_expression arithmetic_expression	) - number + ID ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I51 I98 I126	r16	I126	
558	...... operator primary_expression operator ( constant_expression	) - number + ID ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I51 I97	r18	I97	
559	...... operator primary_expression operator ( expression	) - number + ID ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I51 I100	r31	I100	
560	...... primary_expression operator ( expression )	- number + ID - ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I51 I100 I128	s128		
561	...... primary_expression operator primary_expression operator primary_expression	- number + ID - ......	reduce(primary_expression->( expression ) ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I123	r6	I123	
562	...... operator primary_expression operator primary_expression -	number + ID - ID ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I123 I92	s92		
563	...... operator primary_expression operator primary_expression operator	number + ID - ID ......	reduce(operator->- ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I123 I85	r8	I85	
564	...... primary_expression operator primary_expression operator number	+ ID - ID + ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I123 I85 I48	s48		
565	...... primary_expression operator primary_expression operator primary_expression	+ ID - ID + ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I123 I85 I123	r5	I123	
566	...... operator primary_expression operator primary_expression +	ID - ID + ID ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I123 I85 I123 I83	s83		
567	...... operator primary_expression operator primary_expression operator	ID - ID + ID ......	reduce(operator->+ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I123 I85 I123 I85	r7	I85	
568	...... primary_expression operator primary_expression operator ID	- ID + ID ; ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I123 I85 I123 I85 I46	s46		
569	...... primary_expression operator primary_expression operator primary_expression	- ID + ID ; ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I123 I85 I123 I85 I123	r4	I123	
570	...... operator primary_expression operator primary_expression -	ID + ID ; while ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I123 I85 I123 I85 I123 I92	s92		
571	...... operator primary_expression operator primary_expression operator	ID + ID ; while ......	reduce(operator->- ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I123 I85 I123 I85 I123 I85	r8	I85	
572	...... primary_expression operator primary_expression operator ID	+ ID ; while ( ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I123 I85 I123 I85 I123 I85 I46	s46		
573	...... primary_expression operator primary_expression operator primary_expression	+ ID ; while ( ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I123 I85 I123 I85 I123 I85 I123	r4	I123	
574	...... operator primary_expression operator primary_expression +	ID ; while ( ID ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I123 I85 I123 I85 I123 I85 I123 I83	s83		
575	...... operator primary_expression operator primary_expression operator	ID ; while ( ID ......	reduce(operator->+ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I123 I85 I123 I85 I123 I85 I123 I85	r7	I85	
576	...... primary_expression operator primary_expression operator ID	; while ( ID < ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I123 I85 I123 I85 I123 I85 I123 I85 I46	s46		
577	...... primary_expression operator primary_expression operator primary_expression	; while ( ID < ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I123 I85 I123 I85 I123 I85 I123 I85 I123	r4	I123	
578	...... operator primary_expression operator primary_expression arithmetic_expression	; while ( ID < ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I123 I85 I123 I85 I123 I85 I123 I85 I123 I151	r17	I151	
579	...... operator primary_expression operator primary_expression arithmetic_expression	; while ( ID < ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I123 I85 I123 I85 I123 I85 I123 I151	r16	I151	
580	...... operator primary_expression operator primary_expression arithmetic_expression	; while ( ID < ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I123 I85 I123 I85 I123 I151	r16	I151	
581	...... operator primary_expression operator primary_expression arithmetic_expression	; while ( ID < ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I123 I85 I123 I151	r16	I151	
582	...... operator primary_expression operator primary_expression arithmetic_expression	; while ( ID < ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I85 I123 I151	r16	I151	
583	...... operator primary_expression operator primary_expression arithmetic_expression	; while ( ID < ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I151	r16	I151	
584	...... = primary_expression operator primary_expression arithmetic_expression	; while ( ID < ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I151	r16	I151	
585	...... type_specifier ID = primary_expression arithmetic_expression	; while ( ID < ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I87	r16	I87	
586	...... statement type_specifier ID = constant_expression	; while ( ID < ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I49	r18	I49	
587	...... statement type_specifier ID = expression	; while ( ID < ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I20 I45	r31	I45	
588	...... statement statement type_specifier ID declaration_assign	; while ( ID < ......	reduce(declaration_assign->= expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I14 I21	r41	I21	
589	...... statement statement statement type_specifier declaration_init	; while ( ID < ......	reduce(declaration_init->ID declaration_assign ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I68	r43	I68	
590	...... statement statement type_specifier declaration_init declaration_init_list	; while ( ID < ......	reduce(declaration_init_list->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I68 I110	r45	I110	
591	...... statement type_specifier declaration_init declaration_init_list ;	while ( ID < number ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I37 I68 I110 I131	s131		
592	...... statement statement statement statement declaration	while ( ID < number ......	reduce(declaration->type_specifier declaration_init declaration_init_list ; ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I24	r46	I24	
593	...... statement statement statement statement statement	while ( ID < number ......	reduce(statement->declaration ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35	r59	I35	
594	...... statement statement statement statement while	( ID < number ) ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25	s25		
595	...... statement statement statement while (	ID < number ) { ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53	s53		
596	...... statement statement while ( ID	< number ) { ID ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I94	s94		
597	...... statement statement while ( primary_expression	< number ) { ID ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I98	r4	I98	
598	...... statement while ( primary_expression <	number ) { ID + ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I98 I88	s88		
599	...... statement while ( primary_expression operator	number ) { ID + ......	reduce(operator->< ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I98 I125	r12	I125	
600	...... while ( primary_expression operator number	) { ID + = ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I98 I125 I96	s96		
601	...... while ( primary_expression operator primary_expression	) { ID + = ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I98 I125 I153	r5	I153	
602	...... ( primary_expression operator primary_expression arithmetic_expression	) { ID + = ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I98 I125 I153 I185	r17	I185	
603	...... statement while ( primary_expression arithmetic_expression	) { ID + = ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I98 I126	r16	I126	
604	...... statement statement while ( constant_expression	) { ID + = ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I97	r18	I97	
605	...... statement statement while ( expression	) { ID + = ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I101	r31	I101	
606	...... statement while ( expression )	{ ID + = ID ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I101 I129	s129		
607	...... while ( expression ) {	ID + = ID ; ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I101 I129 I32	s32		
608	...... ( expression ) { ID	+ = ID ; } ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I101 I129 I32 I29	s29		
609	...... expression ) { ID +	= ID ; } int ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I101 I129 I32 I29 I55	s55		
610	...... ) { ID + =	ID ; } int ID ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I101 I129 I32 I29 I55 I102	s102		
611	...... expression ) { ID assignment_operator	ID ; } int ID ......	reduce(assignment_operator->+ = ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I101 I129 I32 I29 I59	r20	I59	
612	...... ) { ID assignment_operator ID	; } int ID = ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I101 I129 I32 I29 I59 I46	s46		
613	...... ) { ID assignment_operator primary_expression	; } int ID = ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I101 I129 I32 I29 I59 I50	r4	I50	
614	...... { ID assignment_operator primary_expression arithmetic_expression	; } int ID = ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I101 I129 I32 I29 I59 I50 I87	r17	I87	
615	...... ) { ID assignment_operator constant_expression	; } int ID = ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I101 I129 I32 I29 I59 I49	r18	I49	
616	...... ) { ID assignment_operator expression	; } int ID = ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I101 I129 I32 I29 I59 I105	r31	I105	
617	...... ( expression ) { assignment_expression	; } int ID = ......	reduce(assignment_expression->ID assignment_operator expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I101 I129 I32 I33	r25	I33	
618	...... expression ) { assignment_expression assignment_expression_profix	; } int ID = ......	reduce(assignment_expression_profix->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I101 I129 I32 I33 I64	r27	I64	
619	...... ( expression ) { assignment_expression_list	; } int ID = ......	reduce(assignment_expression_list->assignment_expression assignment_expression_profix ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I101 I129 I32 I34	r28	I34	
620	...... expression ) { assignment_expression_list ;	} int ID = ( ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I101 I129 I32 I34 I66	s66		
621	...... ( expression ) { expression_statement	} int ID = ( ......	reduce(expression_statement->assignment_expression_list ; ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I101 I129 I32 I27	r62	I27	
622	...... ( expression ) { statement	} int ID = ( ......	reduce(statement->expression_statement ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I101 I129 I32 I35	r54	I35	
623	...... expression ) { statement statement_list	} int ID = ( ......	reduce(statement_list->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I101 I129 I32 I35 I67	r61	I67	
624	...... ( expression ) { statement_list	} int ID = ( ......	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I101 I129 I32 I63	r60	I63	
625	...... expression ) { statement_list }	int ID = ( ( ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I101 I129 I32 I63 I108	s108		
626	...... while ( expression ) compound_statement	int ID = ( ( ......	reduce(compound_statement->{ statement_list } ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I101 I129 I36	r69	I36	
627	...... while ( expression ) statement	int ID = ( ( ......	reduce(statement->compound_statement ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I25 I53 I101 I129 I155	r58	I155	
628	...... statement statement statement statement iteration_statement	int ID = ( ( ......	reduce(iteration_statement->while ( expression ) statement ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I22	r67	I22	
629	...... statement statement statement statement statement	int ID = ( ( ......	reduce(statement->iteration_statement ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35	r57	I35	
630	...... statement statement statement statement int	ID = ( ( number ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I8	s8		
631	...... statement statement statement statement type_specifier	ID = ( ( number ......	reduce(type_specifier->int ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37	r39	I37	
632	...... statement statement statement type_specifier ID	= ( ( number - ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14	s14		
633	...... statement statement type_specifier ID =	( ( number - number ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20	s20		
634	...... statement type_specifier ID = (	( number - number ) ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I51	s51		
635	...... type_specifier ID = ( (	number - number ) + ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I51 I99	s99		
636	...... ID = ( ( number	- number ) + number ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I51 I99 I96	s96		
637	...... ID = ( ( primary_expression	- number ) + number ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I51 I99 I98	r5	I98	
638	...... = ( ( primary_expression -	number ) + number ) ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I51 I99 I98 I92	s92		
639	...... = ( ( primary_expression operator	number ) + number ) ......	reduce(operator->- ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I51 I99 I98 I125	r8	I125	
640	...... ( ( primary_expression operator number	) + number ) * ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I51 I99 I98 I125 I96	s96		
641	...... ( ( primary_expression operator primary_expression	) + number ) * ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I51 I99 I98 I125 I153	r5	I153	
642	...... ( primary_expression operator primary_expression arithmetic_expression	) + number ) * ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I51 I99 I98 I125 I153 I185	r17	I185	
643	...... = ( ( primary_expression arithmetic_expression	) + number ) * ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I51 I99 I98 I126	r16	I126	
644	...... ID = ( ( constant_expression	) + number ) * ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I51 I99 I97	r18	I97	
645	...... ID = ( ( expression	) + number ) * ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I51 I99 I127	r31	I127	
646	...... = ( ( expression )	+ number ) * number ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I51 I99 I127 I154	s154		
647	...... type_specifier ID = ( primary_expression	+ number ) * number ......	reduce(primary_expression->( expression ) ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I51 I98	r6	I98	
648	...... ID = ( primary_expression +	number ) * number + ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I51 I98 I83	s83		
649	...... ID = ( primary_expression operator	number ) * number + ......	reduce(operator->+ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I51 I98 I125	r7	I125	
650	...... = ( primary_expression operator number	) * number + ID ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I51 I98 I125 I96	s96		
651	...... = ( primary_expression operator primary_expression	) * number + ID ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I51 I98 I125 I153	r5	I153	
652	...... ( primary_expression operator primary_expression arithmetic_expression	) * number + ID ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I51 I98 I125 I153 I185	r17	I185	
653	...... ID = ( primary_expression arithmetic_expression	) * number + ID ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I51 I98 I126	r16	I126	
654	...... type_specifier ID = ( constant_expression	) * number + ID ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I51 I97	r18	I97	
655	...... type_specifier ID = ( expression	) * number + ID ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I51 I100	r31	I100	
656	...... ID = ( expression )	* number + ID ; ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I51 I100 I128	s128		
657	...... statement type_specifier ID = primary_expression	* number + ID ; ......	reduce(primary_expression->( expression ) ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50	r6	I50	
658	...... type_specifier ID = primary_expression *	number + ID ; return ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I84	s84		
659	...... type_specifier ID = primary_expression operator	number + ID ; return ......	reduce(operator->* ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85	r9	I85	
660	...... ID = primary_expression operator number	+ ID ; return ID ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I48	s48		
661	...... ID = primary_expression operator primary_expression	+ ID ; return ID ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123	r5	I123	
662	...... = primary_expression operator primary_expression +	ID ; return ID ; ......	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I83	s83		
663	...... = primary_expression operator primary_expression operator	ID ; return ID ; ......	reduce(operator->+ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85	r7	I85	
664	...... primary_expression operator primary_expression operator ID	; return ID ; }	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I46	s46		
665	...... primary_expression operator primary_expression operator primary_expression	; return ID ; }	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123	r4	I123	
666	...... operator primary_expression operator primary_expression arithmetic_expression	; return ID ; }	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I85 I123 I151	r17	I151	
667	...... = primary_expression operator primary_expression arithmetic_expression	; return ID ; }	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I85 I123 I151	r16	I151	
668	...... type_specifier ID = primary_expression arithmetic_expression	; return ID ; }	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I50 I87	r16	I87	
669	...... statement type_specifier ID = constant_expression	; return ID ; }	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I49	r18	I49	
670	...... statement type_specifier ID = expression	; return ID ; }	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I20 I45	r31	I45	
671	...... statement statement type_specifier ID declaration_assign	; return ID ; }	reduce(declaration_assign->= expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I14 I21	r41	I21	
672	...... statement statement statement type_specifier declaration_init	; return ID ; }	reduce(declaration_init->ID declaration_assign ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I68	r43	I68	
673	...... statement statement type_specifier declaration_init declaration_init_list	; return ID ; }	reduce(declaration_init_list->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I68 I110	r45	I110	
674	...... statement type_specifier declaration_init declaration_init_list ;	return ID ; }	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I37 I68 I110 I131	s131		
675	...... statement statement statement statement declaration	return ID ; }	reduce(declaration->type_specifier declaration_init declaration_init_list ; ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I24	r46	I24	
676	...... statement statement statement statement statement	return ID ; }	reduce(statement->declaration ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I35	r59	I35	
677	...... statement statement statement statement return	ID ; }	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I35 I40	s40		
678	...... statement statement statement return ID	; }	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I35 I40 I72	s72		
679	...... statement statement statement return primary_expression	; }	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I35 I40 I77	r4	I77	
680	...... statement statement return primary_expression arithmetic_expression	; }	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I35 I40 I77 I117	r17	I117	
681	...... statement statement statement return constant_expression	; }	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I35 I40 I76	r18	I76	
682	...... statement statement statement return expression	; }	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I35 I40 I74	r31	I74	
683	...... statement statement return expression ;	}	shift	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I35 I40 I74 I115	s115		
684	...... statement statement statement statement jump_statement	}	reduce(jump_statement->return expression ; ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I35 I26	r65	I26	
685	...... statement statement statement statement statement	}	reduce(statement->jump_statement ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I35 I35	r55	I35	
686	...... statement statement statement statement statement_list	}	reduce(statement_list->$ ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I35 I35 I67	r61	I67	
687	...... statement statement statement statement statement_list	}	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I35 I67	r60	I67	
688	...... statement statement statement statement statement_list	}	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I35 I67	r60	I67	
689	...... statement statement statement statement statement_list	}	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I35 I67	r60	I67	
690	...... statement statement statement statement statement_list	}	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I35 I67	r60	I67	
691	...... statement statement statement statement statement_list	}	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I35 I67	r60	I67	
692	...... statement statement statement statement statement_list	}	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I35 I67	r60	I67	
693	...... { statement statement statement statement_list	}	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I35 I67	r60	I67	
694	...... function_definition { statement statement statement_list	}	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I2 I10 I16 I35 I35 I67	r60	I67	
695	...... external_declaration function_definition { statement statement_list	}	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I2 I10 I16 I35 I67	r60	I67	
696	...... external_declaration external_declaration function_definition { statement_list	}	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I2 I10 I16 I23	r60	I23	
697	...... external_declaration function_definition { statement_list }		shift	I0 I2 I2 I2 I10 I16 I23 I52	s52		
698	...... external_declaration external_declaration external_declaration function_definition compound_statement		reduce(compound_statement->{ statement_list } ,['#'])	I0 I2 I2 I2 I10 I15	r69	I15	
699	# external_declaration external_declaration external_declaration function_implement		reduce(function_implement->function_definition compound_statement ,['#'])	I0 I2 I2 I2 I3	r53	I3	
700	# external_declaration external_declaration external_declaration external_declaration		reduce(external_declaration->function_implement ,['#'])	I0 I2 I2 I2 I2	r70	I2	
701	...... external_declaration external_declaration external_declaration external_declaration start		reduce(start->$ ,['#'])	I0 I2 I2 I2 I2 I12	r3	I12	
702	# external_declaration external_declaration external_declaration start		reduce(start->external_declaration start ,['#'])	I0 I2 I2 I2 I12	r2	I12	
703	# external_declaration external_declaration start		reduce(start->external_declaration start ,['#'])	I0 I2 I2 I12	r2	I12	
704	# external_declaration start		reduce(start->external_declaration start ,['#'])	I0 I2 I12	r2	I12	
705	# start		reduce(start->external_declaration start ,['#'])	I0 I1	r2	I1	
706	# start		accept	I0 I1	acc		
